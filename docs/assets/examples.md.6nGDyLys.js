import{_ as e,o as a,c as t,a2 as r}from"./chunks/framework.mZNJGiH_.js";const g=JSON.parse('{"title":"Examples","description":"","frontmatter":{},"headers":[],"relativePath":"examples.md","filePath":"examples.md"}'),s={name:"examples.md"},l=r('<h1 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">â€‹</a></h1><p>The <a href="https://github.com/abw/badger-database-js" target="_blank" rel="noreferrer">github repository</a> contains a number of <a href="https://github.com/abw/badger-database-js/tree/master/examples" target="_blank" rel="noreferrer">examples</a> based on those shown in these manual pages.</p><ul><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/01_basic_queries/example.js" target="_blank" rel="noreferrer">01_basic_queries</a> Connecting to a database and running some basic SQL queries.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/02_named_queries/example.js" target="_blank" rel="noreferrer">02_named_queries</a> Using named queries for reusability and to simplify your application code.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/03_query_fragments/example.js" target="_blank" rel="noreferrer">03_query_fragments</a> Defining reusable query fragments that can be embedded into other queries.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/04_tables/example.js" target="_blank" rel="noreferrer">04_tables</a> Defining tables to get automatically generated insert, update, fetch and delete queries.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/05_table_class/example.js" target="_blank" rel="noreferrer">05_table_class</a> Defining a custom table class with additional application-specific methods.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/06_records/example.js" target="_blank" rel="noreferrer">06_records</a> Using records and defining a custom record class with additional application-specific methods.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/07_musicdb/example.js" target="_blank" rel="noreferrer">07_musicdb</a>. A more complete example of a music database demonstrating custom table and records classes, and the use of relations.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/08_products/example.js" target="_blank" rel="noreferrer">08_products</a>. An example of a database with customers, products and orders.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/09_debugging/example.js" target="_blank" rel="noreferrer">09_debugging</a> Enabling debugging to see what&#39;s going on behind the scenes.</p></li><li><p><a href="https://github.com/abw/badger-database-js/tree/master/examples/10_custom_builder/example.js" target="_blank" rel="noreferrer">10_custom_builder</a> Adding a custom query builder component</p></li></ul>',3),i=[l];function n(o,p,m,b,d,c){return a(),t("div",null,i)}const h=e(s,[["render",n]]);export{g as __pageData,h as default};
